services:
  redis:
    container_name: cache
    image: redis
    ports:
      - 6379:6379
    volumes:
      - redis:/data
  image:
    build:
      context: ./
      dockerfile: ./apps/image/Dockerfile
    ports:
      - '9000:9002'
    env_file:
      - .env
    volumes:
      - ./apps/image:/usr/src/imageService/apps/image
      - ./nest-cli.json:/usr/src/imageService/nest-cli.json
      - ./tsconfig.json:/usr/src/imageService/tsconfig.json
      - ./tsconfig.build.json:/usr/src/imageService/tsconfig.build.json
      - ./package.json:/usr/src/imageService/package.json
      - ./package-lock.json:/usr/src/imageService/package-lock.json
    depends_on:
      - postgres
    command: npm run dev image
  auth:
    build:
      context: ./
      dockerfile: ./apps/auth/Dockerfile
    ports:
      - '1000:1001'
    env_file:
      - .env
    volumes:
      - ./apps/auth:/usr/src/authService/apps/auth
      - ./nest-cli.json:/usr/src/authService/nest-cli.json
      - ./tsconfig.json:/usr/src/authService/tsconfig.json
      - ./tsconfig.build.json:/usr/src/authService/tsconfig.build.json
      - ./package.json:/usr/src/authService/package.json
      - ./package-lock.json:/usr/src/authService/package-lock.json
    depends_on:
      - postgres
      - image
    command: npm run dev auth
  user:
    build:
      context: ./
      dockerfile: ./apps/user/Dockerfile
    ports:
      - '2000:2001'
    env_file:
      - .env
    volumes:
      - ./apps/user:/usr/src/userService/apps/user
      - ./nest-cli.json:/usr/src/userService/nest-cli.json
      - ./tsconfig.json:/usr/src/userService/tsconfig.json
      - ./tsconfig.build.json:/usr/src/userService/tsconfig.build.json
      - ./package.json:/usr/src/userService/package.json
      - ./package-lock.json:/usr/src/userService/package-lock.json
    depends_on:
      - image
      - postgres
    command: npm run dev user
  post:
    build:
      context: ./
      dockerfile: ./apps/post/Dockerfile
    ports:
      - '3000:3001'
    env_file:
      - .env
    volumes:
      - ./apps/post:/usr/src/postService/apps/post
      - ./nest-cli.json:/usr/src/postService/nest-cli.json
      - ./tsconfig.json:/usr/src/postService/tsconfig.json
      - ./tsconfig.build.json:/usr/src/postService/tsconfig.build.json
      - ./package.json:/usr/src/postService/package.json
      - ./package-lock.json:/usr/src/postService/package-lock.json
    depends_on:
      - image
      - postgres
    command: npm run dev post
  comment:
    build:
      context: ./
      dockerfile: ./apps/comment/Dockerfile
    ports:
      - '8000:8001'
    env_file:
      - .env
    volumes:
      - ./apps/comment:/usr/src/commentService/apps/comment
      - ./nest-cli.json:/usr/src/commentService/nest-cli.json
      - ./tsconfig.json:/usr/src/commentService/tsconfig.json
      - ./tsconfig.build.json:/usr/src/commentService/tsconfig.build.json
      - ./package.json:/usr/src/commentService/package.json
      - ./package-lock.json:/usr/src/commentService/package-lock.json
    depends_on:
      - postgres
    command: npm run dev comment
  api:
    build:
      context: ./
      dockerfile: ./apps/api/Dockerfile
    ports:
      - '6000:6001'
    env_file:
      - .env
    depends_on:
      - auth
      - post
      - comment
      - user
      - redis
    volumes:
      - ./apps/api:/usr/src/apiGateway/apps/api
      - ./nest-cli.json:/usr/src/apiGateway/nest-cli.json
      - ./tsconfig.json:/usr/src/apiGateway/tsconfig.json
      - ./tsconfig.build.json:/usr/src/apiGateway/tsconfig.build.json
      - ./package.json:/usr/src/apiGateway/package.json
      - ./package-lock.json:/usr/src/apiGateway/package-lock.json
    command: npm run dev api
  postgres:

    image: postgres
    environment:
      POSTGRES_DB: "blog"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "foofie213"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    ports:
      - '5436:5432'
    volumes:
      - .blogdb-data:/var/lib/postgresql/data
volumes:
  redis:
    driver: local